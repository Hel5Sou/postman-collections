---
openapi: 3.0.3
info:
  title: Apps API - OneLogin
  version: 2.0.0
  contact: {}
servers:
  - url: "https://{{api-domain}}"
paths:
  /api/2/apps:
    get:
      summary: List Apps
      description: List Apps
      operationId: listApps
      parameters:
        - name: connector_id
          in: query
          schema:
            type: string
        - name: auth_method
          in: query
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: string
            example: policy_id
        - name: fields
          in: query
          schema:
            type: string
            example: "id,name,user_count"
      responses:
        "200":
          description: ""
    post:
      summary: Create App
      description: Create App
      operationId: createApp
      parameters:
        - name: name
          in: query
          schema:
            type: string
            example: ""
        - name: connector_id
          in: query
          schema:
            type: string
            example: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                configuration:
                  type: object
                  properties:
                    signature_algorithm:
                      type: string
                      example: SHA-1
                connector_id:
                  type: number
                  example: 50534
                description:
                  type: string
                  example: ""
                name:
                  type: string
                  example: Amazon Web Services (AWS) Multi Role
                parameters:
                  type: object
                  properties:
                    saml_username:
                      type: object
                      properties:
                        user_attribute_mappings:
                          type: string
                          example: email
                sso:
                  type: object
                  properties:
                    certificate:
                      type: object
                      properties:
                        id:
                          type: number
                          example: 170216
                visible:
                  type: boolean
                  example: true
            example:
              configuration:
                signature_algorithm: SHA-1
              connector_id: 50534
              description: ""
              name: Amazon Web Services (AWS) Multi Role
              parameters:
                saml_username:
                  user_attribute_mappings: email
              sso:
                certificate:
                  id: 170216
              visible: true
      responses:
        "200":
          description: ""
  "/api/2/apps/{app_id}":
    get:
      summary: Get App
      description: Get App
      operationId: getApp
      parameters:
        - name: name
          in: query
          schema:
            type: string
            example: ""
        - name: connector_id
          in: query
          schema:
            type: string
            example: ""
      responses:
        "200":
          description: ""
    put:
      summary: Update App
      description: Update App
      operationId: updateApp
      parameters:
        - name: name
          in: query
          schema:
            type: string
            example: ""
        - name: connector_id
          in: query
          schema:
            type: string
            example: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                parameters:
                  type: object
                  properties:
                    saml_username:
                      type: object
                      properties:
                        user_attribute_mappings:
                          type: string
                          example: email
            example:
              parameters:
                saml_username:
                  user_attribute_mappings: email
      responses:
        "200":
          description: ""
    delete:
      summary: Delete App
      description: Delete App
      operationId: deleteApp
      responses:
        "200":
          description: ""
    parameters:
      - name: app_id
        in: path
        required: true
        schema:
          type: string
  "/api/2/apps/{app_id}/parameters/{parameter_id}":
    delete:
      summary: Delete Parameter from App
      description: Delete Parameter from App
      operationId: deleteParameterFromApp
      parameters:
        - name: name
          in: query
          schema:
            type: string
            example: ""
        - name: connector_id
          in: query
          schema:
            type: string
            example: ""
      responses:
        "200":
          description: ""
    parameters:
      - name: app_id
        in: path
        required: true
        schema:
          type: string
      - name: parameter_id
        in: path
        required: true
        schema:
          type: string
  "/api/2/apps/{app_id}/rules":
    get:
      tags:
        - Rules
      summary: List Rules
      description: List Rules
      operationId: listRules
      parameters:
        - name: has_condition
          in: query
          schema:
            type: string
            example: "has_role:{{role_id}}"
        - name: has_condition_type
          in: query
          schema:
            type: string
            example: none
        - name: has_action
          in: query
          schema:
            type: string
            example: "set_status:*"
        - name: has_action_type
          in: query
          schema:
            type: string
            example: none
      responses:
        "200":
          description: ""
    parameters:
      - name: app_id
        in: path
        required: true
        schema:
          type: string
  "/api/2/apps/{app_id}/rules/actions":
    get:
      tags:
        - Rules
      summary: List Actions
      description: List Actions
      operationId: listActions
      responses:
        "200":
          description: ""
    parameters:
      - name: app_id
        in: path
        required: true
        schema:
          type: string
  "/api/2/apps/{app_id}/rules/actions/{rule_action_value}/values":
    get:
      tags:
        - Rules
      summary: List Actions Values
      description: List Actions Values
      operationId: listActionsValues
      responses:
        "200":
          description: ""
    parameters:
      - name: app_id
        in: path
        required: true
        schema:
          type: string
      - name: rule_action_value
        in: path
        required: true
        schema:
          type: string
  "/api/2/apps/{app_id}/rules/conditions":
    get:
      tags:
        - Rules
      summary: List Conditions
      description: List Conditions
      operationId: listConditions
      responses:
        "200":
          description: ""
    parameters:
      - name: app_id
        in: path
        required: true
        schema:
          type: string
  "/api/2/apps/{app_id}/rules/conditions/{rule_condition_value}/operators":
    get:
      tags:
        - Rules
      summary: List Conditions Operators
      description: List Conditions Operators
      operationId: listConditionsOperators
      responses:
        "200":
          description: ""
    parameters:
      - name: app_id
        in: path
        required: true
        schema:
          type: string
      - name: rule_condition_value
        in: path
        required: true
        schema:
          type: string
  "/api/2/apps/{app_id}/rules/conditions/{rule_condition_value}/values":
    get:
      tags:
        - Rules
      summary: List Conditions Values
      description: List Conditions Values
      operationId: listConditionsValues
      responses:
        "200":
          description: ""
    parameters:
      - name: app_id
        in: path
        required: true
        schema:
          type: string
      - name: rule_condition_value
        in: path
        required: true
        schema:
          type: string
  "/api/2/apps/{app_id}/rules/sort":
    put:
      tags:
        - Rules
      summary: Bulk Sort
      description: Bulk Sort
      operationId: bulkSort
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: number
                example: 204500
            example:
              - 204500
              - 204499
              - 204503
              - 204502
              - 204501
      responses:
        "200":
          description: ""
    parameters:
      - name: app_id
        in: path
        required: true
        schema:
          type: string
  "/api/2/apps/{app_id}/rules/{rule_id}":
    get:
      tags:
        - Rules
      summary: Get Rule
      description: Get Rule
      operationId: getRule
      responses:
        "200":
          description: ""
    put:
      tags:
        - Rules
      summary: Update Rule
      description: Update Rule
      operationId: updateRule
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                actions:
                  type: array
                  items:
                    type: object
                    properties:
                      action:
                        type: string
                        example: set_groups
                      expression:
                        type: string
                        example: ".*"
                      value:
                        type: array
                        items:
                          type: string
                          example: member_of
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      operator:
                        type: string
                        example: ri
                      source:
                        type: string
                        example: has_role
                      value:
                        type: string
                        example: "272445"
                enabled:
                  type: boolean
                  example: true
                match:
                  type: string
                  example: all
                name:
                  type: string
                  example: Sample Rule Updated
                position:
                  type: number
                  example: 1
            example:
              actions:
                - action: set_groups
                  expression: ".*"
                  value:
                    - member_of
              conditions:
                - operator: ri
                  source: has_role
                  value: "272445"
              enabled: true
              match: all
              name: Sample Rule Updated
              position: 1
      responses:
        "200":
          description: ""
    delete:
      tags:
        - Rules
      summary: Delete Rule
      description: Delete Rule
      operationId: deleteRule
      responses:
        "200":
          description: ""
    parameters:
      - name: app_id
        in: path
        required: true
        schema:
          type: string
      - name: rule_id
        in: path
        required: true
        schema:
          type: string
  "/api/2/apps/{app_id}/users":
    get:
      summary: Get App Users
      description: Get App Users
      operationId: getAppUsers
      responses:
        "200":
          description: ""
    parameters:
      - name: app_id
        in: path
        required: true
        schema:
          type: string
  /api/2/connectors:
    get:
      summary: List Connectors
      description: List Connectors
      operationId: listConnectors
      parameters:
        - name: auth_method
          in: query
          schema:
            type: string
            example: "2"
        - name: limit
          in: query
          schema:
            type: string
            example: "2"
      responses:
        "200":
          description: ""
  /api/2/mappings:
    post:
      tags:
        - Rules
      summary: Create Rule
      description: Create Rule
      operationId: createRule
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                actions:
                  type: array
                  items:
                    type: object
                    properties:
                      action:
                        type: string
                        example: set_status
                      value:
                        type: array
                        items:
                          type: string
                          example: "2"
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      operator:
                        type: string
                        example: ">"
                      source:
                        type: string
                        example: last_login
                      value:
                        type: string
                        example: "90"
                enabled:
                  type: boolean
                  example: true
                match:
                  type: string
                  example: all
                name:
                  type: string
                  example: Suspend after 90 days inactive
                position:
                  nullable: true
                  example: ~
            example:
              actions:
                - action: set_status
                  value:
                    - "2"
              conditions:
                - operator: ">"
                  source: last_login
                  value: "90"
              enabled: true
              match: all
              name: Suspend after 90 days inactive
              position: ~
      responses:
        "200":
          description: ""
tags:
  - name: Rules
